(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{529:function(s,a,t){"use strict";t.r(a);var e=t(2),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"expr-命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#expr-命令"}},[s._v("#")]),s._v(" expr 命令")]),s._v(" "),t("p",[t("code",[s._v("expr")]),s._v("  命令用于求表达式的值，格式为：")]),s._v(" "),t("h3",{attrs:{id:"expr-表达式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#expr-表达式"}},[s._v("#")]),s._v(" "),t("code",[s._v("expr")]),s._v("  表达式")]),s._v(" "),t("p",[s._v("表达式说明：")]),s._v(" "),t("ul",[t("li",[s._v("用空格隔开每一项")]),s._v(" "),t("li",[s._v("用反斜杠放在 shell 特定的字符前面（发现表达式运行错误时，可以试试转义）")]),s._v(" "),t("li",[s._v("对包含空格和其他特殊字符的字符串要用引号括起来")]),s._v(" "),t("li",[t("code",[s._v("expr")]),s._v("  会在  "),t("code",[s._v("stdout")]),s._v("  中输出结果。如果为逻辑关系表达式，则结果为真，stdout 为 1，否则为 0。")]),s._v(" "),t("li",[t("code",[s._v("expr")]),s._v("  的  "),t("code",[s._v("exit code")]),s._v(" ：如果为逻辑关系表达式，则结果为真，exit code 为 0，否则为 1。")])]),s._v(" "),t("h3",{attrs:{id:"字符串表达式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串表达式"}},[s._v("#")]),s._v(" 字符串表达式")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("length STRING")]),s._v(" "),t("br"),s._v("\n 返回  "),t("code",[s._v("STRING")]),s._v("  的长度")]),s._v(" "),t("li",[t("code",[s._v("index STRING CHARSET")]),s._v(" "),t("br"),s._v("\n 返回  "),t("code",[s._v("CHARSET")]),s._v("  中任意单个字符在  "),t("code",[s._v("STRING")]),s._v("  中最前面的字符位置，"),t("strong",[s._v("下标从 1 开始")]),s._v("。如果在  "),t("code",[s._v("STRING")]),s._v("  中完全不存在  "),t("code",[s._v("CHARSET")]),s._v("  中的字符，则返回 0。")]),s._v(" "),t("li",[t("code",[s._v("substr STRING POSITION LENGTH")]),s._v(" "),t("br"),s._v("\n 返回  "),t("code",[s._v("STRING")]),s._v("  字符串中从  "),t("code",[s._v("POSITION")]),s._v("  开始，长度最大为  "),t("code",[s._v("LENGTH")]),s._v("  的子串。如果  "),t("code",[s._v("POSITION")]),s._v("  或  "),t("code",[s._v("LENGTH")]),s._v("  为负数，0 或非数值，则返回空字符串。")])]),s._v(" "),t("p",[s._v("示例：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("str")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello World!"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" length "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$str")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ``不是单引号，表示执行该命令，输出 12")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" index "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$str")]),s._v('"')]),s._v(" aWd"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出 7，下标从 1 开始")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" substr "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$str")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出 ell")]),s._v("\n")])])]),t("h3",{attrs:{id:"整数表达式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#整数表达式"}},[s._v("#")]),s._v(" 整数表达式")]),s._v(" "),t("p",[t("code",[s._v("expr")]),s._v("  支持普通的算术操作，"),t("strong",[s._v("算术表达式优先级低于字符串表达式，高于逻辑关系表达式。")])]),s._v(" "),t("p",[t("code",[s._v("+ -")]),s._v(" "),t("br"),s._v("\n 加减运算。两端参数会转换为整数，如果转换失败则报错。")]),s._v(" "),t("p",[t("code",[s._v("* / %")]),s._v(" "),t("br"),s._v("\n 乘，除，取模运算。两端参数会转换为整数，如果转换失败则报错。")]),s._v(" "),t("p",[t("code",[s._v("()")]),s._v("  可以提升优先级，但需要用反斜杠转义")]),s._v(" "),t("p",[s._v("示例：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("a")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("b")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" $a + $b"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出 7")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" $a - $b"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出-1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" $a "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("* $b"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出 12，*需要转义")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" $a / $b"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出 0，整除")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" $a % $b"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出 3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" $a + "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("* "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" $b + "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出 20，值为 (a + 1) * (b + 1)")]),s._v("\n")])])]),t("h3",{attrs:{id:"逻辑关系表达式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#逻辑关系表达式"}},[s._v("#")]),s._v(" 逻辑关系表达式")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("|")]),s._v(" "),t("br"),s._v("\n 如果第一个参数非空且非 0，则返回第一个参数的值，否则返回第二个参数的值，但要求第二个参数的值也是非空或非 0，否则返回 0。如果第一个参数是非空或非 0 时，不会计算第二个参数。")]),s._v(" "),t("li",[t("code",[s._v("&")]),s._v(" "),t("br"),s._v("\n 如果两个参数都非空且非 0，则返回第一个参数，否则返回 0。如果第一个参为 0 或为空，则不会计算第二个参数。")]),s._v(" "),t("li",[t("code",[s._v("< <= = == != >= >")]),s._v(" "),t("br"),s._v("\n 比较两端的参数，如果为 true，则返回 1，否则返回 0。”==” 是”=” 的同义词。”expr” 首先尝试将两端参数转换为整数，并做算术比较，如果转换失败，则按字符集排序规则做字符比较。")]),s._v(" "),t("li",[t("code",[s._v("()")]),s._v("  可以提升优先级，但需要用反斜杠转义")])]),s._v(" "),t("p",[s._v("示例：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("a")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("b")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" $a "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" $b"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出 0，>需要转义")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" $a "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<'")]),s._v(" $b"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出 1，也可以将特殊字符用引号引起来")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" $a "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'>='")]),s._v(" $b"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出 0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" $a "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" $b"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出 1")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("c")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("d")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" $c "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" $d"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出 0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" $a "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" $b"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出 3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" $c "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" $d"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出 5")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" $a "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" $b"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出 3")]),s._v("\n")])])]),t("h2",{attrs:{id:"read-命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#read-命令"}},[s._v("#")]),s._v(" read 命令")]),s._v(" "),t("p",[t("code",[s._v("read")]),s._v("  命令用于从标准输入中读取单行数据。当读到文件结束符时， "),t("code",[s._v("exit code")]),s._v("  为 1，否则为 0。")]),s._v(" "),t("p",[s._v("参数说明")]),s._v(" "),t("ul",[t("li",[s._v("-p: 后面可以接提示信息")]),s._v(" "),t("li",[s._v("-t：后面跟秒数，定义输入字符的等待时间，超过等待时间后会自动忽略此命令")])]),s._v(" "),t("p",[s._v("实例：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" name   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 读入 name 的值")]),s._v("\nfengwei2002   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 标准输入")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$name")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出 name 的值")]),s._v("\nfengwei2002   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#标准输出")]),s._v("\n\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" -p "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"请在 30 s 内输入你的姓名："')]),s._v(" -t "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v(" name  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 读入 name 的值，等待时间 30 秒")]),s._v("\n请在 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v(" s 内输入你的姓名：fengwei2002  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 标准输入")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$name")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出 name 的值")]),s._v("\nfengwei2002  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 标准输出")]),s._v("\n")])])]),t("h2",{attrs:{id:"echo-命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#echo-命令"}},[s._v("#")]),s._v(" echo 命令")]),s._v(" "),t("p",[t("code",[s._v("echo")]),s._v("  用于输出字符串。命令格式：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" STRING\n")])])]),t("p",[s._v("显示普通字符串")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello World"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" Hello World  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 引号可以省略")]),s._v("\n")])])]),t("p",[s._v("显示转义字符")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("Hello World"),t("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v('"')]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意只能使用双引号，如果使用单引号，则不转义")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v('"Hello World'),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v('"  '),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 也可以省略双引号")]),s._v("\n")])])]),t("p",[s._v("显示变量")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("fengwei2002\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"My name is '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$name")]),s._v('"')]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出 My name is fengwei2002")]),s._v("\n")])])]),t("p",[s._v("显示换行")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hi'),t("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('"')]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -e 开启转义")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"12345678"')]),s._v("\n")])])]),t("p",[s._v("输出结果：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("Hi\n\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12345678")]),s._v("\n")])])]),t("p",[s._v("显示不换行")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hi '),t("span",{pre:!0,attrs:{class:"token entity",title:"\\c"}},[s._v("\\c")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -e 开启转义 \\c 不换行")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"12345678"')]),s._v("\n")])])]),t("p",[s._v("输出结果：")]),s._v(" "),t("p",[t("code",[s._v("Hi 12345678")])]),s._v(" "),t("p",[s._v("显示结果定向至文件")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello World"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" output.txt  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将内容以覆盖的方式输出到 output.txt 中")]),s._v("\n")])])]),t("p",[s._v("原样输出字符串，不进行转义或取变量（用单引号）")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("acwing\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$name\\\"'")]),s._v("\n")])])]),t("p",[s._v("输出结果（单引号不使用变量）")]),s._v(" "),t("p",[t("code",[s._v('$name\\"')]),s._v(" "),t("br"),s._v("\n 显示命令的执行结果")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n")])])]),t("p",[s._v("输出结果：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("Fri Sep "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(":48:05 CST "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2021")]),s._v("\n")])])]),t("h2",{attrs:{id:"printf-命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#printf-命令"}},[s._v("#")]),s._v(" printf 命令")]),s._v(" "),t("p",[s._v("总所周知 printf 是用来输出文字的")]),s._v(" "),t("p",[s._v("printf 命令用于格式化输出，类似于 C/C++ 中的 printf 函数。")]),s._v(" "),t("p",[s._v("默认不会在字符串末尾添加换行符。")]),s._v(" "),t("p",[s._v("命令格式：")]),s._v(" "),t("p",[t("code",[s._v("printf format-string [arguments...]")]),s._v(" "),t("br"),s._v("\n 用法示例"),t("br"),s._v("\n脚本内容：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("printf")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%10d!'),t("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 占 10 位，右对齐")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("printf")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%-10.2f!'),t("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123.123321")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 占 10 位，保留 2 位小数，左对齐")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("printf")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"myNameIs%s'),t("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fengwei2002"')]),s._v("        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 格式化输出字符串")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("printf")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d * %d = %d'),t("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('"')]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("* "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 表达式的值作为参数")]),s._v("\n")])])]),t("p",[s._v("输出结果：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123.12")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\nmyNameIsfengwei2002\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" * "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\n")])])]),t("h2",{attrs:{id:"test-命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#test-命令"}},[s._v("#")]),s._v(" test 命令")]),s._v(" "),t("p",[s._v("在命令行中输入  "),t("code",[s._v("man test")]),s._v(" ，可以查看  "),t("code",[s._v("test")]),s._v("  命令的用法。")]),s._v(" "),t("p",[t("strong",[t("code",[s._v("test")]),s._v("  命令用于判断文件类型，以及对变量做比较。")])]),s._v(" "),t("p",[t("code",[s._v("test")]),s._v("  命令用  "),t("code",[s._v("exit code")]),s._v("  返回结果，而不是使用 stdout。"),t("strong",[s._v("0 表示真，非 0 表示假。")])]),s._v(" "),t("p",[s._v("例如：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" -lt "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 为真，返回值为 0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v("          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出上个命令的返回值，输出 0")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出当前目录下的所有文件")]),s._v("\ntest.sh\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" -e test.sh "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"exist"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Not exist"')]),s._v("\nexist   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# test.sh 文件存在")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" -e test2.sh "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"exist"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Not exist"')]),s._v("\nNot exist  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# testh2.sh 文件不存在")]),s._v("\n")])])]),t("h3",{attrs:{id:"逻辑运算符-和"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符-和"}},[s._v("#")]),s._v(" 逻辑运算符 "),t("code",[s._v("&&")]),s._v("  和 "),t("code",[s._v("||")])]),s._v(" "),t("p",[s._v("&& 表示与，|| 表示或"),t("br"),s._v("\n二者具有短路原则："),t("br"),s._v("\nexpr1 && expr2：当 expr1 为假时，直接忽略 expr2"),t("br"),s._v("\nexpr1 || expr2：当 expr1 为真时，直接忽略 expr2"),t("br"),s._v(" "),t("strong",[s._v(" 表达式的 exit code 为 0，表示真；为非零，表示假。（与 C/C++ 中的定义相反）")])]),s._v(" "),t("hr"),s._v(" "),t("h3",{attrs:{id:"文件类型判断"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件类型判断"}},[s._v("#")]),s._v(" 文件类型判断")]),s._v(" "),t("p",[s._v("命令格式：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" -e filename  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 判断文件是否存在")]),s._v("\n")])])]),t("p",[s._v("测试参数\t代表意义"),t("br"),s._v("\n - e\t文件是否存在"),t("br"),s._v("\n - f\t是否为文件"),t("br"),s._v("\n - d\t是否为目录")]),s._v(" "),t("h3",{attrs:{id:"文件权限判断"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件权限判断"}},[s._v("#")]),s._v(" 文件权限判断")]),s._v(" "),t("p",[s._v("命令格式：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" -r filename  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 判断文件是否可读")]),s._v("\n")])])]),t("p",[s._v("测试参数\t代表意义"),t("br"),s._v("\n - r\t文件是否可读"),t("br"),s._v("\n - w\t文件是否可写"),t("br"),s._v("\n - x\t文件是否可执行"),t("br"),s._v("\n - s\t是否为非空文件")]),s._v(" "),t("h3",{attrs:{id:"整数间的比较"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#整数间的比较"}},[s._v("#")]),s._v(" 整数间的比较")]),s._v(" "),t("p",[s._v("命令格式：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(" -eq "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a 是否等于 b")]),s._v("\n")])])]),t("p",[s._v("测试参数\t代表意义"),t("br"),s._v("\n - eq\ta 是否等于 b"),t("br"),s._v("\n-ne\ta 是否不等于 b"),t("br"),s._v("\n-gt\ta 是否大于 b"),t("br"),s._v("\n-lt\ta 是否小于 b"),t("br"),s._v("\n-ge\ta 是否大于等于 b"),t("br"),s._v("\n-le\ta 是否小于等于 b")]),s._v(" "),t("h3",{attrs:{id:"字符串比较"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串比较"}},[s._v("#")]),s._v(" 字符串比较")]),s._v(" "),t("p",[s._v("测试参数\t代表意义"),t("br"),s._v("\n test -z STRING\t判断 STRING 是否为空，如果为空，则返回 true"),t("br"),s._v("\ntest -n STRING\t判断 STRING 是否非空，如果非空，则返回 true（-n 可以省略）"),t("br"),s._v("\ntest str1 == str2\t判断 str1 是否等于 str2"),t("br"),s._v("\ntest str1 != str2\t判断 str1 是否不等于 str2")]),s._v(" "),t("h3",{attrs:{id:"多重条件判定"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多重条件判定"}},[s._v("#")]),s._v(" 多重条件判定")]),s._v(" "),t("p",[s._v("命令格式：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" -r filename -a -x filename\n")])])]),t("p",[s._v("测试参数\t代表意义"),t("br"),s._v("\n - a\t两条件是否同时成立"),t("br"),s._v("\n - o\t两条件是否至少一个成立"),t("br"),s._v("\n！\t取反。如 test ! -x file，当 file 不可执行时，返回 true")]),s._v(" "),t("h2",{attrs:{id:"判断符号"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#判断符号"}},[s._v("#")]),s._v(" 判断符号 "),t("code",[s._v("[]")])]),s._v(" "),t("p",[t("code",[s._v("[]")]),s._v("  与 test 用法几乎一模一样，更常用于 if 语句中。另外 "),t("code",[s._v("[[]]")]),s._v("  是 "),t("code",[s._v("[]")]),s._v("  的加强版，支持的特性更多。")]),s._v(" "),t("p",[s._v("例如：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('[ 2 -lt 3 ]  # 为真，返回值为 0\necho $?  # 输出上个命令的返回值，输出 0\n~$ ls  # 列出当前目录下的所有文件\nhomework  output.txt  test.sh  tmp\n~$ [ -e test.sh ] && echo "exist" || echo "Not exist"\nexist  # test.sh 文件存在\n~$ [ -e test2.sh ] && echo "exist" || echo "Not exist"\nNot exist  # testh2.sh 文件不存在\n')])])]),t("p",[s._v("注意：")]),s._v(" "),t("p",[t("code",[s._v("[]")]),s._v("  内的每一项都要用空格隔开"),t("br"),s._v("\n中括号内的变量，最好用双引号括起来"),t("br"),s._v("\n中括号内的常数，最好用单或双引号括起来"),t("br"),s._v("\n例如：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fengwei2002"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fengwei2002"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 错误，等价于 [ fengwei2002 == "fengwei2002" ]，参数太多')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$name")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fengwei2002"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 正确")]),s._v("\n")])])]),t("h2",{attrs:{id:"exit-命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#exit-命令"}},[s._v("#")]),s._v(" exit 命令")]),s._v(" "),t("p",[s._v("exit 命令用来退出当前 shell 进程，并返回一个退出状态；使用  "),t("code",[s._v("$?")]),s._v("  可以接收这个退出状态。")]),s._v(" "),t("p",[s._v("exit 命令可以接受一个整数值作为参数，代表退出状态。如果不指定，默认状态值是 0。")]),s._v(" "),t("p",[s._v("exit 退出状态只能是一个介于 0~255 之间的整数，其中只有 0 表示成功，其它值都表示失败。")]),s._v(" "),t("p",[s._v("示例：")]),s._v(" "),t("p",[s._v("创建脚本  "),t("code",[s._v("test.sh")]),s._v(" ，内容如下：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#! /bin/bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$#")]),s._v(" -ne "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果传入参数个数等于 1，则正常退出；否则非正常退出。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"arguments not valid"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"arguments valid"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),t("p",[s._v("执行该脚本：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x test.sh \n$ ./test.sh acwing\narguments valid\nacs@9e0ebfcd82d7:~$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 传入一个参数，则正常退出，exit code 为 0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\nacs@9e0ebfcd82d7:~$ ./test.sh \narguments not valid\nacs@9e0ebfcd82d7:~$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 传入参数个数不是 1，则非正常退出，exit code 为 1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])])]),t("h2",{attrs:{id:"文件重定向"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件重定向"}},[s._v("#")]),s._v(" 文件重定向")]),s._v(" "),t("p",[s._v("每个进程默认打开 3 个文件描述符：")]),s._v(" "),t("p",[s._v("stdin 标准输入，从命令行读取数据，文件描述符为 0"),t("br"),s._v("\nstdout 标准输出，向命令行输出数据，文件描述符为 1"),t("br"),s._v("\nstderr 标准错误输出，向命令行输出数据，文件描述符为 2"),t("br"),s._v("\n 可以用文件重定向将这三个文件重定向到其他文件中。")]),s._v(" "),t("p",[s._v("重定向命令列表")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("命令")]),s._v(" "),t("th",[s._v("说明")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("command > file")]),s._v(" "),t("td",[s._v("将 stdout 重定向到 file 中")])]),s._v(" "),t("tr",[t("td",[s._v("command < file")]),s._v(" "),t("td",[s._v("将 stdin 重定向到 file 中")])]),s._v(" "),t("tr",[t("td",[s._v("command >> file")]),s._v(" "),t("td",[s._v("将 stdout 以追加方式重定向到 file 中")])]),s._v(" "),t("tr",[t("td",[s._v("command n> file")]),s._v(" "),t("td",[s._v("将文件描述符 n 重定向到 file 中")])]),s._v(" "),t("tr",[t("td",[s._v("command n>> file")]),s._v(" "),t("td",[s._v("将文件描述符 n 以追加方式重定向到 file 中")])])])]),s._v(" "),t("p",[s._v("输入和输出重定向")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" -e "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello '),t("span",{pre:!0,attrs:{class:"token entity",title:"\\c"}},[s._v("\\c")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" output.txt  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将 stdout 重定向到 output.txt 中")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"World"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" output.txt  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将字符串追加到 output.txt 中")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" str "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" output.txt  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从 output.txt 中读取字符串")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$str")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出结果：Hello World")]),s._v("\n")])])]),t("p",[s._v("同时重定向 stdin 和 stdout"),t("br"),s._v("\n 创建 bash 脚本：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#! /bin/bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" a\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" b\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v('"')]),s._v(" + "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n")])])]),t("p",[s._v("创建 input.txt，里面的内容为：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n")])])]),t("p",[s._v("执行命令：(把输入输出同时重定向)")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x test.sh  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加可执行权限")]),s._v("\n$ ./test.sh "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" input.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" output.txt  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从 input.txt 中读取内容，将输出写入 output.txt 中")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" output.txt  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看 output.txt 中的内容")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("\n")])])]),t("h2",{attrs:{id:"引入外部脚本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#引入外部脚本"}},[s._v("#")]),s._v(" 引入外部脚本")]),s._v(" "),t("p",[s._v("类似于 C/C++ 中的 include 操作，bash 也可以引入其他文件中的代码。")]),s._v(" "),t("p",[s._v("语法格式：")]),s._v(" "),t("p",[t("code",[s._v(". filename")]),s._v("   # 注意点和文件名之间有一个空格")]),s._v(" "),t("p",[s._v("或")]),s._v(" "),t("p",[t("code",[s._v("source filename")]),s._v(" "),t("br"),s._v("\n 示例")]),s._v(" "),t("p",[s._v("创建  "),t("code",[s._v("test1.sh")]),s._v(" ，内容为：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("#! /bin/bash\n\nname=fw  # 定义变量 name\n")])])]),t("p",[s._v("然后创建  "),t("code",[s._v("test2.sh")]),s._v(" ，内容为：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#! /bin/bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" test1.sh "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或 . test1.sh")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" My name is: "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$name")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以使用 test1.sh 中的变量")]),s._v("\n")])])]),t("p",[s._v("执行命令：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ chmod +x test2.sh \n$ ./test2.sh # 注意 test2.sh 不需要执行权限，可以读就可以了 \nMy name is: fw \n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);