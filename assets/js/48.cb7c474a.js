(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{531:function(v,_,a){"use strict";a.r(_);var t=a(2),e=Object(t.a)({},(function(){var v=this,_=v.$createElement,a=v._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h2",{attrs:{id:"在-vim-中进行打字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在-vim-中进行打字"}},[v._v("#")]),v._v(" 在 vim 中进行打字")]),v._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"20210824193823-2021-08-24-19-38-27","data-src":"https://raw.githubusercontent.com/fengwei2002/Pictures_02/master/images/20210824193823-2021-08-24-19-38-27.png",loading:"lazy"}})]),v._v(" "),a("p",[a("kbd",[v._v("i")]),v._v("  从正常模式切换到插入模式，当前方块的前面为具体的插入位置： insert")]),v._v(" "),a("p",[a("kbd",[v._v("a")]),v._v("  从当前位置的后面进入插入模式，一般使用 a 较多 ：append")]),v._v(" "),a("p",[a("kbd",[v._v("o")]),v._v("  光标移动到下一行开始，切换到插入模式")]),v._v(" "),a("p",[a("kbd",[v._v("ctrl")]),v._v(" + "),a("kbd",[v._v("[")]),v._v(" 退出插入模式，（右手拇指加食指）")]),v._v(" "),a("p",[a("kbd",[v._v(":q")]),v._v(" 退出文件（会有文件临时存储记录，忘记保存也可以）"),a("br"),v._v(" "),a("kbd",[v._v(":w")]),v._v(" + 文件名 保存文件"),a("br"),v._v(" "),a("kbd",[v._v(":wq")]),v._v(" + 空格 + 文件名 存档后离开")]),v._v(" "),a("p",[v._v("将 ESC 键映射为两次 j 键")]),v._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("inoremap jj <Esc>\n")])])]),a("h3",{attrs:{id:"vim-的退出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-的退出"}},[v._v("#")]),v._v(" VIM 的退出")]),v._v(" "),a("p",[v._v("VIM 的最终操作就是 VIM 的退出，命令模式下执行以下操作就可以实现对应的功能")]),v._v(" "),a("p",[v._v("保存当前对文件的修改，但是不退出文件。 "),a("code",[v._v(":w")])]),v._v(" "),a("p",[v._v("强制保存但是不退出文件。 "),a("code",[v._v(":w!")])]),v._v(" "),a("p",[v._v("保存当前的文件修改到 file 文件当中。 "),a("code",[v._v(":w file")]),v._v(" "),a("br"),v._v("\n（例如写了一个 cpp 文件，然后执行这个命令就可以将写好的内容放到另一个已经创建好的 cpp 文件，就是 windows 里面的：test.cpp 已存在，是否覆盖？）")]),v._v(" "),a("p",[v._v("退出文件，对文件的修改不做保存。 "),a("code",[v._v(":q!")]),v._v("  （相当于强制退出）")]),v._v(" "),a("p",[v._v("退出所有的文件，对所有的文件修改都不做保存。 "),a("code",[v._v(":qa!")]),v._v("  （quit all ！）")]),v._v(" "),a("p",[v._v("退出文件并保存对文件的修改。 "),a("code",[v._v(":wq")]),v._v("  （这个就是最常用的～）")]),v._v(" "),a("p",[v._v("退出文件并保存对文件的修改。 "),a("code",[v._v(":x")]),v._v("  （功能等价：wq）")]),v._v(" "),a("p",[v._v("打开另一个文件。 "),a("code",[v._v(":e file")]),v._v("  （edit-e）")]),v._v(" "),a("p",[v._v("放弃对文件的所有修改，恢复文件到上次保存的位置。 "),a("code",[v._v(":e!")]),v._v(" （代表文件编辑失效，edit ！）")]),v._v(" "),a("p",[v._v("另存为 file。 "),a("code",[v._v(":saveas file")]),v._v("  （saveas 没有空格）")]),v._v(" "),a("p",[v._v("当打开多个文件的时候可以输入 :bn 和 :bp 进行上一个文件或者下一个文件的切换。 "),a("code",[v._v(":bn 和 :bp")])]),v._v(" "),a("h2",{attrs:{id:"在-vim-中进行移动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在-vim-中进行移动"}},[v._v("#")]),v._v(" 在 vim 中进行移动")]),v._v(" "),a("p",[a("kbd",[v._v("h j k l")]),v._v(" 上下左右，熟练即可")]),v._v(" "),a("p",[v._v("3 + 空格 向后跳三个光标")]),v._v(" "),a("p",[a("kbd",[v._v("w")]),v._v(" 跳单词"),a("br"),v._v(" "),a("kbd",[v._v("W")]),v._v(" 跳完全匹配的单词"),a("br"),v._v(" "),a("kbd",[v._v("b")]),v._v(" 往前跳"),a("br"),v._v(" "),a("kbd",[v._v("B")]),v._v(" 完全匹配往前跳"),a("br"),v._v(" "),a("kbd",[v._v("}")]),v._v(" 右边的大括号跳一个段落"),a("br"),v._v(" "),a("kbd",[v._v("{")]),v._v(" 左边的大括号往左侧跳一个段落")]),v._v(" "),a("p",[a("kbd",[v._v("G")]),v._v(" 跑到文章末尾 Graph （相比滚轮方便很多，5G 跳到文本的第五行）"),a("br"),v._v(" "),a("kbd",[v._v("gg")]),v._v(" 两个小写 g 字母跑到文章起始点"),a("br"),v._v(" "),a("kbd",[v._v("0")]),v._v(" 跑到一行的行首"),a("br"),v._v(" "),a("kbd",[v._v("$")]),v._v(" 跑到一行的行尾")]),v._v(" "),a("p",[v._v("gk 进行视图层级的上下移动， （编辑器会对超过规定长度的文字进行折行）"),a("br"),v._v("\ngj")]),v._v(" "),a("p",[v._v("在 insert 模式下不需要移动，（虽然上下左右可以实现），"),a("br"),v._v("\n操作流程是：打字，离开，移动，插入，打字 "),a("eq",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("mo",[v._v("⋯")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[v._v("\\cdots")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.31em","vertical-align":"0em"}}),a("span",{staticClass:"minner"},[v._v("⋯")])])])])])],1),v._v(" "),a("h3",{attrs:{id:"快速移动光标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#快速移动光标"}},[v._v("#")]),v._v(" 快速移动光标")]),v._v(" "),a("p",[v._v("几个重要的快捷键")]),v._v(" "),a("p",[v._v("请记住这几个快捷键 h,j,k,l 这几个按键主要是用来快速移动光标的，h 是向左移动光标，l 是向右移动光标，j 是向下移动光标，k 是向上移动光标，h , j , k ,l 在主键盘区完全可以取代键盘上的 ↑ ,↓ ,← , → 的功能（上下左右）。")]),v._v(" "),a("h3",{attrs:{id:"在当前行上移动光标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在当前行上移动光标"}},[v._v("#")]),v._v(" 在当前行上移动光标")]),v._v(" "),a("p",[a("code",[v._v("0")]),v._v("  移动到行头 //O 无中央的像素点，而 0 有中间的像素点，正常模式按 0 就可以将光标移动到选中行的行头")]),v._v(" "),a("p",[a("code",[v._v("^")]),v._v("  移动到本行的第一个不是 blank 字符（TY 中间上方，小键盘 6 对应的位置）")]),v._v(" "),a("p",[a("code",[v._v("$")]),v._v("  移动到行尾 （4 对应的符号）")]),v._v(" "),a("p",[a("code",[v._v("g_")]),v._v("  移动到本行最后一个不是 blank 字符的位置")]),v._v(" "),a("p",[a("code",[v._v("w")]),v._v("  光标移动到下一个单词的开头")]),v._v(" "),a("p",[a("code",[v._v("e")]),v._v("  光标移动到下一个单词的结尾 （常用）")]),v._v(" "),a("p",[a("code",[v._v("fa")]),v._v("  移动到本行下一个为 a 的字符处，fb 移动到下一个为 b 的字符处 （find）")]),v._v(" "),a("p",[a("code",[v._v("nfa")]),v._v("  移动到本行光标处开始的第 n 个 字符为 a 的地方（n 是 1，2，3，4 ... 数字）")]),v._v(" "),a("p",[a("code",[v._v("Fa")]),v._v("  同 fa 一样，光标移动方向同 fa 相反")]),v._v(" "),a("p",[a("code",[v._v("nFa")]),v._v("  同 nfa 类似，光标移动方向同 nfa 相反")]),v._v(" "),a("p",[a("code",[v._v("ta")]),v._v("  移动光标至 a 字符的前一个字符")]),v._v(" "),a("p",[a("code",[v._v("nta")]),v._v("  移动到第 n 个 a 字符的前一个字符处")]),v._v(" "),a("p",[v._v("Ta 同 ta 移动光标方向相反")]),v._v(" "),a("p",[a("code",[v._v("nTa")]),v._v("  同  "),a("code",[v._v("nta")]),v._v("  移动光标方向相反")]),v._v(" "),a("p",[v._v("; 和，当使用 f, F, t ,T, 关键字指定字符跳转的时候，使用 ；可以快速跳转到下一个指定的字符，, 是跳到前一个指定的字符")]),v._v(" "),a("h3",{attrs:{id:"跨行移动光标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨行移动光标"}},[v._v("#")]),v._v(" 跨行移动光标")]),v._v(" "),a("p",[a("code",[v._v("nG")]),v._v("  光标定位到第 n 行的行首")]),v._v(" "),a("p",[a("code",[v._v("gg")]),v._v("  光标定位到第一行的行首")]),v._v(" "),a("p",[a("code",[v._v("G")]),v._v("  光标定位到最后一行的行首")]),v._v(" "),a("p",[a("code",[v._v("H")]),v._v("  光标定位到当前屏幕的第一行行首")]),v._v(" "),a("p",[a("code",[v._v("M")]),v._v("  光标移动到当前屏幕的中间")]),v._v(" "),a("p",[a("code",[v._v("L")]),v._v("  光标移动到当前屏幕的尾部")]),v._v(" "),a("p",[a("code",[v._v("zt")]),v._v("  把当前行移动到当前屏幕的最上方，也就是第一行")]),v._v(" "),a("p",[a("code",[v._v("zz")]),v._v("  把当前行移动到当前屏幕的中间 （常用）")]),v._v(" "),a("p",[a("code",[v._v("zb")]),v._v("  把当前行移动到当前屏幕的尾部")]),v._v(" "),a("p",[a("code",[v._v("%")]),v._v("  匹配括号移动，包括 ( , { , [ 需要把光标先移动到括号上")]),v._v(" "),a("p",[a("code",[v._v("*")]),v._v("  和 # 匹配光标当前所在的单词，移动光标到下一个（或者上一个）匹配的单词（  "),a("code",[v._v("*")]),v._v("  是下一个，# 是上一个）"),a("br"),v._v("\n8 和 3 对应的额外字符")]),v._v(" "),a("h2",{attrs:{id:"在文件里面搜索文字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在文件里面搜索文字"}},[v._v("#")]),v._v(" 在文件里面搜索文字")]),v._v(" "),a("p",[v._v("编辑器将不会区分大小写，如果你进行该设置之后，进行关键字查询只要是字符相同不会区分大小写都会进行匹配。")]),v._v(" "),a("p",[a("code",[v._v(":set ic")])]),v._v(" "),a("p",[v._v("区分大小写的查询。")]),v._v(" "),a("p",[a("code",[v._v(":set noic")])]),v._v(" "),a("p",[a("kbd",[v._v("?")]),v._v(" + content 触发搜索动作")]),v._v(" "),a("p",[a("kbd",[v._v(":set hlsearch")]),v._v(" 高亮")]),v._v(" "),a("p",[a("kbd",[v._v("n")]),v._v(" 向上跳动搜索结果光标")]),v._v(" "),a("p",[a("kbd",[v._v("N")]),v._v(" 向下跳动搜索结果光标")]),v._v(" "),a("p",[v._v("问号和斜线在同一个位置，使用不同的按键，n 和 N 的作用相反")]),v._v(" "),a("p",[v._v("如果懒得打那个单词的话，就先让光标停留在对应单词位置，使用数字 8 对应的 "),a("kbd",[v._v("*")]),v._v(" 进行查询，编辑器会自动将光标对应单词进行高亮，和这个字母相反的是使用 "),a("kbd",[v._v("#")])]),v._v(" "),a("p",[a("kbd",[v._v(":set nohlsearch")])]),v._v(" "),a("p",[a("kbd",[v._v("f")]),v._v(" + 任意字母，光标跳转到行中出现的第一个字母，"),a("br"),v._v(" "),a("kbd",[v._v("F")]),v._v(" + 任意字母，光标进行向前跳转，")]),v._v(" "),a("h3",{attrs:{id:"替换文字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#替换文字"}},[v._v("#")]),v._v(" 替换文字")]),v._v(" "),a("p",[v._v("如果要将搜索的内容进行替换  "),a("code",[v._v(":{作用范围}s/{目标}/{替换}/{替换的标志}")])]),v._v(" "),a("ul",[a("li",[a("code",[v._v(":n1,n2s/word1/word2/g:")]),v._v("  n1 n2 是数字，在第 n1 行与 n2 行之间寻找 word1 这个字符串，并将这个字符串替换为 word2")]),v._v(" "),a("li",[a("code",[v._v(":1,$s/word1/word2/g")]),v._v("  将全文的 word1 替换为 word2")]),v._v(" "),a("li",[a("code",[v._v(":1,$s/word1/word2/gc")]),v._v("  将全文的 word1 替换为 word2， 替换每一个字符串之前向用户进行询问")])]),v._v(" "),a("p",[a("strong",[v._v("选定一个区域进行替换")])]),v._v(" "),a("p",[v._v("在可视模式下选择区域后输入 : ，VIM 会自动补全为  "),a("code",[v._v(":'<,'>")]),v._v("  ,（可是模式为鼠标可以操作的那个模式）")]),v._v(" "),a("p",[a("code",[v._v(":'<,'>s/ugly/handsome/g")])]),v._v(" "),a("p",[v._v("选区，在可视模式下选择区域后输入 : ，VIM 会自动补全为  "),a("code",[v._v(":'<,'>")]),v._v("  ,（可是模式为鼠标可以操作的那个模式）")]),v._v(" "),a("p",[a("code",[v._v(":'<,'>s/ugly/handsome/g")])]),v._v(" "),a("p",[v._v("这个操作咋一看起来有点懵逼，这个操作是可视模式 (Visual-mode) 下选区中的替换操作（可视模式下文会谈到），可视模式下输入：会自动补全 :'<,'> 这个是可视范围下的操作范围，类似于 % 和 n1,n2，代表操作的文本范围，上面的例子就是替换掉可视区域的 ugly 为 handsome。")]),v._v(" "),a("p",[v._v("下面来谈谈替换的标志。"),a("br"),v._v("\n上文中命令结尾的 g 即是替换标志之一，表示全局 global 替换（即替换目标的所有出现）。 还有很多其他有用的替换标志：")]),v._v(" "),a("p",[v._v("空替换标志表示只替换从光标位置开始，目标的第一次出现")]),v._v(" "),a("p",[a("code",[v._v(":s/ugly/handsome")])]),v._v(" "),a("p",[v._v("作用于当前行，从光标处开始查找替换，仅仅替换第一次匹配 ugly 的地方为 handsome 。")]),v._v(" "),a("p",[a("code",[v._v(":%s/ugly/handsome")])]),v._v(" "),a("p",[v._v("替换掉文件中所有行第一次出现 ugly 的地方为 handsome 。")]),v._v(" "),a("p",[v._v("i 表示大小写不敏感查找，I 表示大小写敏感：  "),a("code",[v._v(":%s/ugly/handsome/i")])]),v._v(" "),a("p",[v._v("替换掉所有行第一个出现 ugly （不区分大小写） 为 handsome  "),a("code",[v._v(":%s/ugly/handsome/gi")])]),v._v(" "),a("p",[v._v("替换掉所有行出现 ugly （不区分大小写） 为 handsome 。")]),v._v(" "),a("p",[v._v('c 表示需要确认，例如全局查找 "ugly" 替换为 "handsome" 并且需要确认：（用来以防万一手抖等等等）'),a("br"),v._v(" "),a("code",[v._v(":%s/ugly/handsome/gc")])]),v._v(" "),a("h3",{attrs:{id:"使用-ab-长字符串替换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-ab-长字符串替换"}},[v._v("#")]),v._v(" 使用 ab（长字符串替换）")]),v._v(" "),a("p",[a("code",[v._v(":ab email 123@gmail.com")])]),v._v(" "),a("p",[a("code",[v._v(":")]),v._v("  后面的 ab 是关键字，该命令执行后，然后切换到编辑模式下，输入 email 会把输入的 email 自动替换成  "),a("code",[v._v("123@gmail.com")]),v._v(" 。")]),v._v(" "),a("p",[v._v("这个命令主要是处理频繁输入同样的长串字符串。")]),v._v(" "),a("h3",{attrs:{id:"撤销操作和恢复"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#撤销操作和恢复"}},[v._v("#")]),v._v(" 撤销操作和恢复")]),v._v(" "),a("p",[a("code",[v._v("u")]),v._v("  撤销刚才的操作")]),v._v(" "),a("p",[a("code",[v._v("ctrl + r")]),v._v("  恢复撤销操作")]),v._v(" "),a("h2",{attrs:{id:"在-vim-中进行复制粘贴"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在-vim-中进行复制粘贴"}},[v._v("#")]),v._v(" 在 vim 中进行复制粘贴")]),v._v(" "),a("p",[a("kbd",[v._v("v")]),v._v(" 进入 visual 模式 然后就可以使用 之前的光标移动操作进行内容选块操作")]),v._v(" "),a("p",[a("kbd",[v._v("V")]),v._v(" 进入 visual line 模式，使用 hjkl 进行移动的时候按照代码块进行移动")]),v._v(" "),a("p",[a("kbd",[v._v("y")]),v._v(" 复制选中的内容 yank: 猛拉")]),v._v(" "),a("p",[a("kbd",[v._v("p")]),v._v(" 粘贴，粘贴的时候不用调回 insert 模式，直接在当前模式下进行粘贴即可 paste")]),v._v(" "),a("p",[a("kbd",[v._v("yy")]),v._v(" 直接 yank 一整行 ，p 进行粘贴即可 yy5p 粘贴五行相同的内容")]),v._v(" "),a("h3",{attrs:{id:"复制粘贴高级操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复制粘贴高级操作"}},[v._v("#")]),v._v(" 复制粘贴高级操作")]),v._v(" "),a("ul",[a("li",[v._v("y 是复制的意思，通常搭配一个字符（复制范围）实现复制的功能，常用的如下：")]),v._v(" "),a("li",[v._v("yw 复制一个单词，还有 ynw")]),v._v(" "),a("li",[v._v("yfa 复制光标到下一个 a 的字符处，还有 ynfa")]),v._v(" "),a("li",[v._v("yy 复制一行，还有 nyy")]),v._v(" "),a("li",[a("code",[v._v("y$")]),v._v("  复制光标到本行的结尾")]),v._v(" "),a("li",[v._v("yH 复制屏幕显示的第一行文本到光标所在的行")]),v._v(" "),a("li",[v._v("yG 复制光标所在行到文本的结束")])]),v._v(" "),a("hr"),v._v(" "),a("ul",[a("li",[v._v("p ，P 是黏贴的意思，当执行完复制或者黏贴的命令以后，VIM 会把文本寄存起来。")]),v._v(" "),a("li",[v._v("p 在光标后开始复制")]),v._v(" "),a("li",[v._v("P 大写的 P 光标前开始复制")])]),v._v(" "),a("p",[a("kbd",[v._v("3yy")]),v._v(" 复制从光标行之后的三行内容（并不需要选中内容）")]),v._v(" "),a("p",[a("kbd",[v._v("y$")]),v._v(" 字面意思：把光标到行末的内容 copy 起来")]),v._v(" "),a("p",[a("kbd",[v._v("yG")]),v._v(" 将当前光标开始直到文件末尾的内容全部复制")]),v._v(" "),a("p",[a("kbd",[v._v(" u")]),v._v(" 撤回上一步操作：uodo"),a("br"),v._v(" "),a("kbd",[v._v(" ctrl + r")]),v._v(" 撤销撤销操作 redo")]),v._v(" "),a("p",[a("kbd",[v._v('"ap')]),v._v(" 可以调用很多个不同的剪切板"),a("br"),v._v(" "),a("kbd",[v._v('"bp')]),v._v(" （相对高级的操作，可以自定义用户片段）")]),v._v(" "),a("p",[a("kbd",[v._v(":set clipboard=unnamed ")]),v._v(" 将电脑的剪切板和暂存器同步")]),v._v(" "),a("blockquote",[a("p",[v._v("vim 共有 48 个不同的暂存器，每个暂存器都有不同的效果")])]),v._v(" "),a("h2",{attrs:{id:"编辑文字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编辑文字"}},[v._v("#")]),v._v(" 编辑文字")]),v._v(" "),a("p",[a("kbd",[v._v(" A ")]),v._v(" 跳到行末 用 I 和 A 来替换 0i 和 $a"),a("br"),v._v(" "),a("kbd",[v._v(" O ")]),v._v(" 在当前行上方插入一行并进入插入模式（小写 o 在下一行开始写）")]),v._v(" "),a("p",[a("kbd",[v._v(" D ")]),v._v(" 将光标后面的行中内容全部删除")]),v._v(" "),a("p",[a("kbd",[v._v(" x ")]),v._v(" 删除单个字，放到暂存器中")]),v._v(" "),a("p",[a("kbd",[v._v(" dd ")]),v._v(" "),a("strong",[v._v("删除当前行")]),a("br"),v._v(" "),a("kbd",[v._v(" d12 ")]),v._v(" 删除当前光标之后的 12 个字符"),a("br"),v._v(" "),a("kbd",[v._v(" 2dd ")]),v._v(" 删除两行"),a("br"),v._v(" "),a("kbd",[v._v(" d + h,l ")]),v._v(" 删除光标左侧的内容或者删除光标右侧的单个字"),a("br"),v._v(" "),a("kbd",[v._v(" dG ")]),v._v(" 删除光标之后直到文章末尾")]),v._v(" "),a("p",[a("kbd",[v._v(" c ")]),v._v(" 删除选中内容并且把内容放到寄存器，直接进入 insert 模式，参数同 d")]),v._v(" "),a("blockquote",[a("p",[v._v("使用 c 的话删除之后会立即进入 insert 模式，可以少打一下键盘，不用删除文字后再使用")])]),v._v(" "),a("p",[a("kbd",[v._v(" C")]),v._v(" 和大写 "),a("kbd",[v._v(" D ")]),v._v(" 的作用相同 （将光标后面的行中内容全部删除，同时进入 insert 模式）")]),v._v(" "),a("p",[a("kbd",[v._v(" r ")]),v._v("：replace 替换单个字母，替换之后仍然处于 normal 状态")]),v._v(" "),a("p",[a("kbd",[v._v(">> 或者 <<")]),v._v(" 增加或者减少缩进")]),v._v(" "),a("p",[v._v("将所有内容选中之后，进行 "),a("kbd",[v._v("=")]),v._v(" 操作，他们会自动格式化代码")]),v._v(" "),a("ul",[a("li",[a("code",[v._v("i")]),v._v("  是在光标所在的字符之前插入需要录入的文本。")]),v._v(" "),a("li",[a("code",[v._v("I")]),v._v("  是在光标所在行的行首插入需要录入的文本。")]),v._v(" "),a("li",[a("code",[v._v("a")]),v._v("  是在光标所在的字符之后插入需要录入的文本。")]),v._v(" "),a("li",[a("code",[v._v("A")]),v._v("  是在光标所在行的行尾插入需要录入的文本。")]),v._v(" "),a("li",[a("code",[v._v("o")]),v._v("  是光标所在行的下一行行首插入需要录入的文本。")]),v._v(" "),a("li",[a("code",[v._v("O")]),v._v("  是光标所在行的上一行行首插入需要录入的文本。")]),v._v(" "),a("li",[a("code",[v._v("s")]),v._v("  删除光标所在处的字符然后插入需要录入的文本。")]),v._v(" "),a("li",[a("code",[v._v("S")]),v._v("  删除光标所在行，在当前行的行首开始插入需要录入的文本")])]),v._v(" "),a("hr"),v._v(" "),a("ul",[a("li",[v._v("d 是删除的意思，通常搭配一个字符 (删除范围) 实现删除功能，常用的如下：")]),v._v(" "),a("li",[v._v("dw 删除一个单词")]),v._v(" "),a("li",[v._v("dnw 删除 n 个单词，")]),v._v(" "),a("li",[v._v("dfa 删除光标处到下一个 a 的字符处（ fa 定位光标到 a 处 ）")]),v._v(" "),a("li",[v._v("dnfa 删除光标处到第 n 个 a 的字符处")]),v._v(" "),a("li",[v._v("dd 删除一整行")]),v._v(" "),a("li",[v._v("ndd 删除光标处开始的 n 行")]),v._v(" "),a("li",[a("code",[v._v("d$")]),v._v("  删除光标到本行的结尾")]),v._v(" "),a("li",[v._v("dH 删除屏幕显示的第一行文本到光标所在的行")]),v._v(" "),a("li",[v._v("dG 删除光标所在行到文本的结束")])]),v._v(" "),a("h3",{attrs:{id:"删除字符操作和替换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除字符操作和替换"}},[v._v("#")]),v._v(" 删除字符操作和替换")]),v._v(" "),a("ul",[a("li",[v._v("x 删除光标当前所在的字符")]),v._v(" "),a("li",[v._v("r 替换掉光标当前所在的字符")]),v._v(" "),a("li",[v._v("R 替换掉从光标开始以后的所有字符，除非  "),a("code",[v._v("<ESC>")]),v._v("  退出")])]),v._v(" "),a("h3",{attrs:{id:"大小写转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#大小写转换"}},[v._v("#")]),v._v(" 大小写转换")]),v._v(" "),a("ul",[a("li",[v._v("~ 将光标下的字母改变大小写")]),v._v(" "),a("li",[v._v("3~ 将光标位置开始的 3 个字母改变其大小写")]),v._v(" "),a("li",[v._v("g~~ 改变当前行字母的大小写")]),v._v(" "),a("li",[v._v("gUU 将当前行的字母改成大写")]),v._v(" "),a("li",[v._v("guu 将当前行的字母全改成小写")]),v._v(" "),a("li",[v._v("3gUU 将从光标开始到下面 3 行字母改成大写")]),v._v(" "),a("li",[v._v("gUw 将光标下的单词改成大写。")]),v._v(" "),a("li",[v._v("guw 将光标下的单词改成小写")])]),v._v(" "),a("h2",{attrs:{id:"visual-mode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#visual-mode"}},[v._v("#")]),v._v(" （Visual-mode)")]),v._v(" "),a("h3",{attrs:{id:"可视化模式下操作文本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可视化模式下操作文本"}},[v._v("#")]),v._v(" 可视化模式下操作文本")]),v._v(" "),a("p",[v._v("可视化模式下选择操作区域以后，"),a("br"),v._v("\n按下 d 会删除选择的区域，"),a("br"),v._v("\n按下 y 会复制选择的区域，按下 p 会黏贴选择的区域。")]),v._v(" "),a("p",[v._v("cw ，删除从光标处开始到该单词结束的所有字符，然后插入需要录入的文本（这个命令是两个字符的合体 cw ）。相当于 Windows 窗口下的鼠标双击进行的单词替换")]),v._v(" "),a("p",[a("kbd",[v._v("ctrl + v")]),v._v(" 进入 v-block 模式。可以实现竖着的光标选取，即 shift + alt 样式， （注意先关闭 ctrl v 的粘贴映射）")]),v._v(" "),a("p",[a("kbd",[v._v("vw")]),v._v(" 选取一个单词，vwwwwww 就是按照单词进行光标区的扩充")]),v._v(" "),a("p",[a("kbd",[v._v("viw")]),v._v(" "),a("strong",[v._v("选取光标所处的单词")]),v._v(" 常用 + c 字母进行对某一个块进行修改")]),v._v(" "),a("p",[a("kbd",[v._v("vaw")]),v._v(" 按照块区选择单词")]),v._v(" "),a("p",[a("kbd",[v._v('vi"')]),v._v(" 选取一个字符串中的内容，哇哇哇，vscode 中选中的话就很不方便")]),v._v(" "),a("p",[a("kbd",[v._v("vit")]),v._v(" 选取 tag 中的所有内容 例如 html 中的内容")]),v._v(" "),a("p",[a("kbd",[v._v("vat")]),v._v(" 相比于 vit 选取之后包含两边的 tag")]),v._v(" "),a("p",[a("kbd",[v._v("v+{")]),v._v(" 选取下方文本块 （复制一段函数很方便）"),a("br"),v._v(" "),a("kbd",[v._v("v+}")])]),v._v(" "),a("p",[a("kbd",[v._v("diw ciw")]),v._v(" 等操作同理")]),v._v(" "),a("h2",{attrs:{id:"vim-text-object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-text-object"}},[v._v("#")]),v._v(" vim text object")]),v._v(" "),a("p",[a("strong",[v._v("VIM 的重复命令")])]),v._v(" "),a("p",[v._v(". 该命令是重复上一个操作的命令"),a("br"),v._v(" "),a("code",[v._v("n<command>")]),v._v("  重复某个命令 n 次，"),a("br"),v._v("\n如 10p 复制 10 次，10dd 删除十次。"),a("br"),v._v("\n名词："),a("br"),v._v(" "),a("code",[v._v("w = word , s = sentence， p = paragraph t = tag;")]),v._v(" "),a("br"),v._v("\n 单双引号， 双括号，小括号，中括号，大括号")]),v._v(" "),a("p",[v._v("动词："),a("br"),v._v("\ny = yank , p = paste, d = delete, c = change,")]),v._v(" "),a("p",[v._v("范围："),a("br"),v._v("\ni= inner a = around")]),v._v(" "),a("p",[v._v("例如合起来的一个操作 "),a("kbd",[v._v("yiw")])]),v._v(" "),a("h2",{attrs:{id:"其他使用技巧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他使用技巧"}},[v._v("#")]),v._v(" 其他使用技巧")]),v._v(" "),a("p",[v._v("gg=G 进行文件格式化")]),v._v(" "),a("p",[v._v("ctrl + q 取消当前正在执行的命令")]),v._v(" "),a("p",[a("kbd",[v._v("^")]),v._v(" 6 跳到行首，（去除空格部分）更加方便的开始再次写代码 代替 0"),a("br"),v._v("\n 正则表达式")]),v._v(" "),a("p",[a("kbd",[v._v("ctrlf")]),v._v(" 往后面翻页"),a("br"),v._v(" "),a("kbd",[v._v("ctrlb")]),v._v(" 往前面翻页")]),v._v(" "),a("p",[a("kbd",[v._v("zf")]),v._v(" 折叠代码段"),a("br"),v._v(" "),a("kbd",[v._v("zd")]),v._v(" 展开代码段")]),v._v(" "),a("p",[a("kbd",[v._v("zf i p")]),v._v(" 就可以快捷的把一段文本进行折叠，而不用先选中再折叠")]),v._v(" "),a("p",[a("kbd",[v._v(".")]),v._v(" 重复上一个《大动作》")]),v._v(" "),a("p",[a("kbd",[v._v("J")]),v._v("选中内容后，将多段文字的回车去除")]),v._v(" "),a("p",[a("kbd",[v._v("ctrl w")]),v._v(" 删除一个 word 在 insert 模式下")]),v._v(" "),a("p",[a("kbd",[v._v("ctrl u")]),v._v(" 前面的所有东西全部删除")]),v._v(" "),a("p",[a("kbd",[v._v(":!")]),v._v(" + 想要执行的指令，就可以在 vim 窗口下面执行一些想要执行的指令")]),v._v(" "),a("p",[a("kbd",[v._v(":r!")]),v._v(" + 指令 复制相应的内容")]),v._v(" "),a("p",[a("kbd",[v._v(":h")]),v._v(" + 想要查询的内容")]),v._v(" "),a("p",[v._v("终端下执行："),a("kbd",[v._v("vimtutor zh")]),v._v(" 进入官方给出的 vim 教程")]),v._v(" "),a("p",[v._v("在正常模式下，按 @a 执行宏录制的一系列动作，将会在第二行执行插入 tab 。"),a("br"),v._v("\n@@ 是对上一次宏使用的重复操作。n@a 就会执行 n 次一系列的动作。使用宏录制可以一次执行一系列的操作，可以针对一些重复度较高的操作进行宏录制。")]),v._v(" "),a("h2",{attrs:{id:"vim-多文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-多文件"}},[v._v("#")]),v._v(" vim 多文件")]),v._v(" "),a("p",[v._v("有 tmux 的存在， vim  的多文件以及分屏已经可以被替代")]),v._v(" "),a("details",{staticClass:"showmore"},[a("summary",[v._v("SHOWMORE")]),v._v(" "),a("h3",{attrs:{id:"用-vim-一次性打开多个文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用-vim-一次性打开多个文件"}},[v._v("#")]),v._v(" 用 VIM 一次性打开多个文件")]),v._v(" "),a("p",[v._v("现在有多个文件  "),a("code",[v._v("file1 ，file2 , ... ,filen.")])]),v._v(" "),a("p",[v._v("现在举例打开两个文件  "),a("code",[v._v("file1，file2")])]),v._v(" "),a("p",[a("code",[v._v("vim file1 file2")])]),v._v(" "),a("p",[v._v("该方式打开文件，显示屏默认显示第一个文件也就是 file1，"),a("br"),v._v("\nVIM 的正常模式下按下键盘上的冒号  "),a("code",[v._v("：")]),v._v(" 这时会在显示屏底部出现冒号 "),a("code",[v._v("：")]),v._v(" （进入了 VIM 的命令模式），"),a("br"),v._v("\n然后在输入 ls （ls 为调出列表命令），"),a("br"),v._v("\n屏幕上会出现打开的所有文件的序号和文件名，我们继续输入冒号 ： ，然后输入 bn （这里的 n 需要做一个解释并不是键盘上的 n , 而是文件序号的代指，如 b1 代表显示屏上切换到第一个文件，b2 代表显示屏上切换到第二个文件）。")]),v._v(" "),a("p",[a("code",[v._v(":ls")])]),v._v(" "),a("p",[v._v("上面这个命令将会列出 VIM 打开的所有文件。")]),v._v(" "),a("p",[a("code",[v._v(":b2")])]),v._v(" "),a("p",[v._v("上面的这个命令将会在显示屏上显示第二个文件。")]),v._v(" "),a("h3",{attrs:{id:"在显示屏上一次性显示多个文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在显示屏上一次性显示多个文件"}},[v._v("#")]),v._v(" 在显示屏上一次性显示多个文件")]),v._v(" "),a("p",[v._v("VIM 可以实现分屏操作，一个屏幕被多个文件给分占，有左右和上下两种分屏的方式。")]),v._v(" "),a("p",[v._v("左右分屏如下操作：")]),v._v(" "),a("p",[a("code",[v._v("vim -On file1 file2 ... filen")])]),v._v(" "),a("p",[v._v("这里的 n （ n 是要打开的具体文件的数目：1,2,3 ...）是代表有几个文件需要分屏，从左至右依次显示 n 个文件。")]),v._v(" "),a("p",[v._v("上下分屏如下操作：")]),v._v(" "),a("p",[a("code",[v._v("vim -on file1 file2 ... filen")])]),v._v(" "),a("p",[v._v("这个命令跟上一个命令不同的是其中的参数 -on（ n 是要打开的具体文件的数目：1,2,3 ...） 中的 o 是小写，这样将会上下依次显示 n 个文件。")]),v._v(" "),a("p",[v._v("上下分屏显示文件使用小写 o 记号 + n"),a("br"),v._v("\n 左右分屏显示文件使用大写 O 记号 + n")]),v._v(" "),a("p",[a("code",[v._v("vim -O2 test01.cpp test02.cpp")])])]),v._v(" "),a("h2",{attrs:{id:"分屏操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分屏操作"}},[v._v("#")]),v._v(" 分屏操作")]),v._v(" "),a("details",{staticClass:"showmore"},[a("summary",[v._v("SHOWMORE")]),v._v(" "),a("p",[a("kbd",[v._v(":e")]),v._v(" 后面加上文件名，可以在不离开 vim 的情况下打开一个文件")]),v._v(" "),a("p",[a("kbd",[v._v(":tabe")]),v._v(" 多窗口开启一个文件，后面跟文件名就打开那个对应的文件")]),v._v(" "),a("p",[a("kbd",[v._v("gt")]),v._v(" 向后切换 tab 页")]),v._v(" "),a("p",[a("kbd",[v._v("gT")]),v._v(" 向前切换 tab 页")]),v._v(" "),a("p",[a("kbd",[v._v(":new")]),v._v(" 开启页面分割"),a("br"),v._v(" "),a("kbd",[v._v("ctrl w w")]),v._v(" 循环切换"),a("br"),v._v(" "),a("kbd",[v._v("ctrl w + j")]),v._v(" 向下切换光标")]),v._v(" "),a("p",[a("kbd",[v._v(":vnew")]),v._v(" 开启右侧页面 （垂直）"),a("br"),v._v(" "),a("kbd",[v._v("ctrl w + l / h")]),v._v(" 进行切换光标位置")]),v._v(" "),a("p",[a("kbd",[v._v("vim -o filename filename")]),v._v(" 同时打开文档，水平窗口"),a("br"),v._v(" "),a("kbd",[v._v("vim -O filename filename")]),v._v(" 垂直窗口")]),v._v(" "),a("p",[a("kbd",[v._v("vim -p")]),v._v(" 按照不同的 tab 页打开")]),v._v(" "),a("p",[v._v("可以用 buffer 操作代替多窗口操作"),a("br"),v._v(" "),a("kbd",[v._v(":bp")]),a("br"),v._v(" "),a("kbd",[v._v(":bn")]),a("br"),v._v(" "),a("kbd",[v._v(":blast \\ :bl ")]),a("br"),v._v(" "),a("kbd",[v._v(":bf ")]),a("br"),v._v(" "),a("kbd",[v._v(":b filename")]),a("br"),v._v(" "),a("kbd",[v._v(":bdelete \\ :bd ")])]),v._v(" "),a("p",[v._v("记住一个重要的组合键  "),a("code",[v._v("Ctrl + w")]),v._v(" , 操作分屏离不开这个组合键  （关于窗口的操作 windows-w）")]),v._v(" "),a("h3",{attrs:{id:"vim-文件分屏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-文件分屏"}},[v._v("#")]),v._v(" vim 文件分屏")]),v._v(" "),a("p",[v._v("按住组合键 Ctrl + w ，然后在按下 s")]),v._v(" "),a("p",[a("code",[v._v("Ctrl + w s")])]),v._v(" "),a("p",[v._v("上面这个命令将会上下分割当前打开的文件。")]),v._v(" "),a("p",[v._v("按住冒号 "),a("code",[v._v("：")]),v._v(" ，紧接着输入  "),a("code",[v._v("sp")]),v._v("  , 在键入文件名，如下：")]),v._v(" "),a("p",[a("code",[v._v(":sp file")])]),v._v(" "),a("p",[v._v("上面的这个命令将会上下分割当前文件和新打开的 file 。")]),v._v(" "),a("p",[v._v("按住组合键  "),a("code",[v._v("Ctrl + w")]),v._v(" , 然后在按下 "),a("code",[v._v("v")])]),v._v(" "),a("p",[a("code",[v._v("Ctrl +w v")])]),v._v(" "),a("p",[v._v("上面的这个命令将会左右分割当前的文件")]),v._v(" "),a("p",[v._v("按住冒号  "),a("code",[v._v("：")]),v._v(" ，紧接着输入  "),a("code",[v._v("vsp")]),v._v("  , 在键入文件名称，如下：")]),v._v(" "),a("p",[a("code",[v._v(":vsp file")])]),v._v(" "),a("p",[v._v("上面的这个命令将会左右分割当前打开的文件和新打开的文件 file 。")]),v._v(" "),a("h3",{attrs:{id:"切换光标-移动分屏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#切换光标-移动分屏"}},[v._v("#")]),v._v(" 切换光标，移动分屏")]),v._v(" "),a("ol",[a("li",[v._v("切换左右分屏的光标 ：")])]),v._v(" "),a("p",[v._v("将当前光标定位到左边的屏幕  "),a("code",[v._v("Ctrl + w h")])]),v._v(" "),a("p",[v._v("将当前的光标定位到右边的屏幕  "),a("code",[v._v("Ctrl + w l")])]),v._v(" "),a("p",[v._v("（因为 vim 和 linux 中使用 hjkl 代表上下左右，所以 ctrl+w+h 代表将光标移动到左屏幕，ctrl+w+l 代表将光标移动到右边的屏幕，而不是使用 lr 代表左右，这里的键盘的地理位置和功能也对应，h 在左，l 在右）")]),v._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[v._v("移动左右分屏 ：")])]),v._v(" "),a("p",[v._v("将当前的分屏移动到左边  "),a("code",[v._v("Ctrl + w H")])]),v._v(" "),a("p",[v._v("将当前的分屏移动到右边  "),a("code",[v._v("Ctrl + w L")])]),v._v(" "),a("p",[v._v("与移动光标操作不同的是，需要 caps 进行锁定，大写字母为分屏的相关操作")]),v._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[v._v("切换上下分屏的光标 ：")])]),v._v(" "),a("p",[v._v("将当前的光标移动到下面的分屏  "),a("code",[v._v("Ctrl + w j")])]),v._v(" "),a("p",[v._v("将当前光标移动到上面的分屏  "),a("code",[v._v("Ctrl + w k")])]),v._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[v._v("移动上下分屏：")])]),v._v(" "),a("p",[v._v("将当前的分屏移动到下面的分屏  "),a("code",[v._v("Ctrl + w J")])]),v._v(" "),a("p",[v._v("将当前的分屏移动到上面的分屏  "),a("code",[v._v("Ctrl + w K")])]),v._v(" "),a("h3",{attrs:{id:"关闭分屏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关闭分屏"}},[v._v("#")]),v._v(" 关闭分屏")]),v._v(" "),a("p",[v._v("这个命令是关闭当前的分屏"),a("br"),v._v(" "),a("code",[v._v("Ctrl + w c")]),v._v("  （close）")]),v._v(" "),a("p",[v._v("上面的这个命令也是关闭当前的分屏，如果是最后一个分屏将会退出 VI 不太行"),a("br"),v._v(" "),a("code",[v._v("Ctrl + w q")])])]),v._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[v._v("#")]),v._v(" 参考资料")]),v._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.bilibili.com/video/BV1fV41187Zr?p=1",target:"_blank",rel:"noopener noreferrer"}},[v._v("即将失传的技艺 vim 【1P-14P】"),a("OutboundLink")],1)]),v._v(" "),a("li",[a("a",{attrs:{href:""}},[v._v("vimtutor zh")])])])])}),[],!1,null,null,null);_.default=e.exports}}]);